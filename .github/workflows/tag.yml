name: Tag Projects

on:
  workflow_call:
    inputs:
      force-tag:
        description: "If true, always create and push the tag, even if the project did not change."
        type: boolean
        required: false
        default: false
      dry-run:
        description: "If true, do not push tags, just print what would be done."
        type: boolean
        required: false
        default: false
      tag-pattern:
        description: "Pattern for tag name, e.g. {project}/v{version}"
        type: string
        required: false
        default: '{project}/v{version}'
      src-path:
        description: "Path to search for project files"
        type: string
        default: 'src'

permissions:
  contents: write      # Required to create tags

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  discover-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find-projects.outputs.projects }}
      projects-matrix: ${{ steps.find-projects.outputs.projects-matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Find all projects
        id: find-projects
        uses: sandre58/MyWorkflows/actions/find-projects@main
        with:
          src-path: ${{ inputs.src-path }}

  tag-projects:
    runs-on: ubuntu-latest
    needs: discover-projects
    if: needs.discover-projects.outputs.projects != ''
    strategy:
      matrix: ${{ fromJson(needs.discover-projects.outputs.projects-matrix) }}
    steps:
      - name: Compute version for ${{ matrix.name }}
        id: version
        uses: sandre58/MyWorkflows/actions/compute-version@main
        with:
          project: ${{ matrix.name }}
          working-directory: ${{ matrix.dir }}

      - name: Create and push tag
        if: steps.version.outputs.changed == 'true' || inputs.force-tag == true
        id: create-tag
        uses: sandre58/MyWorkflows/actions/create-tag@main
        with:
          project: ${{ matrix.name }}
          version: ${{ steps.version.outputs.version }}
          tag-pattern: ${{ inputs.tag-pattern }}
          dry-run: ${{ inputs.dry-run }}
          working-directory: ${{ matrix.dir }}

      - name: Summarize created tag
        shell: bash
        working-directory: ${{ matrix.dir }}
        run: |
          if [ "${{ steps.version.outputs.changed }}" == "true" ] || [ "${{ inputs.force-tag }}" == "true" ]; then
            TAG_NAME="${{ steps.create-tag.outputs.tag-name }}"
            echo "- **${{ matrix.name }}**: $TAG_NAME (${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **${{ matrix.name }}**: No tag created (no change)" >> $GITHUB_STEP_SUMMARY
          fi