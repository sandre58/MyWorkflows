name: CI

on:
  workflow_call:
    inputs:
      src-path:
        description: "Path to search for project files"
        type: string
        default: 'src'
      dotnet-versions:
        description: "Versions of .NET to install"
        type: string
        default: |
          10.0.x
          9.0.x
          8.0.x
      runsettings-file:
        description: "Path to .runsettings file for test configuration"
        type: string
        required: false
        default: '.runsettings'
      compute-versions:
        description: "Whether to compute versions automatically using semantic versioning"
        type: boolean
        default: true

permissions:
  contents: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  discover-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find-projects.outputs.projects }}
      projects-matrix: ${{ steps.find-projects.outputs.projects-matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Find all projects
        id: find-projects
        uses: sandre58/MyWorkflows/actions/find-projects@main
        with:
          src-path: ${{ inputs.src-path }}

  compute-versions:
    runs-on: ubuntu-latest
    needs: discover-projects
    if: inputs.compute-versions == true && needs.discover-projects.outputs.projects != ''
    strategy:
      matrix: ${{ fromJson(needs.discover-projects.outputs.projects-matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Compute version for ${{ matrix.name }}
        id: version
        uses: sandre58/MyWorkflows/actions/compute-version@main
        with:
          project: ${{ matrix.name }}
          working-directory: ${{ matrix.dir }}

      - name: Set NBGV version for ${{ matrix.name }}
        uses: sandre58/MyWorkflows/actions/set-nbgv-version@main
        with:
          version: ${{ steps.version.outputs.version }}
          working-directory: ${{ matrix.dir }}
          project-name: ${{ matrix.name }}

      - name: Add NBGV package to ${{ matrix.name }}
        uses: sandre58/MyWorkflows/actions/add-nbgv-package@main
        with:
          dotnet-versions: ${{ inputs.dotnet-versions }}
          working-directory: ${{ matrix.dir }}
          project-name: ${{ matrix.name }}

      - name: Commit version files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add . || true
          git diff --staged --quiet || git commit -m "Update version.json files [skip ci]" || true

  build-test-and-pack:
    runs-on: ubuntu-latest
    needs: [discover-projects, compute-versions]
    if: always() && needs.discover-projects.result == 'success'
    outputs:
      packages-path: ${{ steps.pack.outputs.packages-path }}
      output-directory: ${{ steps.pack.outputs.output-directory }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Pull latest changes (including version files)
        if: inputs.compute-versions == true && needs.compute-versions.result == 'success'
        run: git pull origin ${{ github.ref_name }}

      - name: Build and Test
        uses: sandre58/MyWorkflows/actions/build-and-test@main
        with:
          dotnet-versions: ${{ inputs.dotnet-versions }}
          runsettings-file: ${{ inputs.runsettings-file }}

      - name: Pack
        id: pack
        uses: sandre58/MyWorkflows/actions/pack@main
        with:
          pack-args: "--no-build"

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ${{ steps.pack.outputs.output-directory }}/*.nupkg