name: CI

on:
  workflow_call:
    inputs:
      src-path:
        description: "Path to search for project files"
        type: string
        default: 'src'
      tests-path:
        description: "Path to search for test files"
        type: string
        default: 'TestResults'
      dotnet-versions:
        description: "Versions of .NET to install"
        type: string
        default: |
          10.0.x
          9.0.x
          8.0.x
      runsettings-file:
        description: "Path to .runsettings file for test configuration"
        type: string
        required: false
        default: '.runsettings'
      compute-versions:
        description: "Whether to compute versions automatically using semantic versioning"
        type: boolean
        default: true

permissions:
  checks: write        # Required to publish test results
  actions: read        # Required to read workflow runs
  contents: write      # Required to checkout code and push to gh-pages
  pages: write         # Required to publish to GitHub Pages

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  discover-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find-projects.outputs.projects }}
      projects-matrix: ${{ steps.find-projects.outputs.projects-matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Find all projects
        id: find-projects
        uses: sandre58/MyWorkflows/actions/find-projects@main
        with:
          src-path: ${{ inputs.src-path }}

  compute-versions:
    runs-on: ubuntu-latest
    needs: discover-projects
    if: inputs.compute-versions == true && needs.discover-projects.outputs.projects != ''
    strategy:
      matrix: ${{ fromJson(needs.discover-projects.outputs.projects-matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Compute version for ${{ matrix.name }}
        id: version
        uses: sandre58/MyWorkflows/actions/compute-version@main
        with:
          project: ${{ matrix.name }}
          working-directory: ${{ matrix.dir }}

      - name: Set NBGV version for ${{ matrix.name }}
        uses: sandre58/MyWorkflows/actions/set-nbgv-version@main
        with:
          version: ${{ steps.version.outputs.version }}
          working-directory: ${{ matrix.dir }}
          project-name: ${{ matrix.name }}

      - name: Add NBGV package to ${{ matrix.name }}
        uses: sandre58/MyWorkflows/actions/add-nbgv-package@main
        with:
          dotnet-versions: ${{ inputs.dotnet-versions }}
          working-directory: ${{ matrix.dir }}
          project-name: ${{ matrix.name }}

      - name: Upload updated sources
        uses: actions/upload-artifact@v4
        with:
          name: updated-${{ matrix.name }}
          path:  |
            ${{ matrix.dir }}
            !${{ matrix.dir }}/node_modules/**


  build-test-and-pack:
    runs-on: ubuntu-latest
    needs: [discover-projects, compute-versions]
    if: always() && needs.discover-projects.result == 'success'
    outputs:
      packages-path: ${{ steps.pack.outputs.packages-path }}
      output-directory: ${{ steps.pack.outputs.output-directory }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Download version files
        uses: actions/download-artifact@v4
        with:
          path: updated-projects

      - name: Restore updated files
        run: |
          for csproj in $(find ${{ inputs.src-path }} -name '*.csproj'); do
            project_name=$(basename "$csproj" .csproj);
            cp -r updated-projects/updated-$project_name/* "$(dirname "$csproj")"/;
          done

      - name: Build and Test
        uses: sandre58/MyWorkflows/actions/build-and-test@main
        with:
          dotnet-versions: ${{ inputs.dotnet-versions }}
          runsettings-file: ${{ inputs.runsettings-file }}

      - name: Pack
        id: pack
        uses: sandre58/MyWorkflows/actions/pack@main
        with:
          pack-args: "--no-build"

      - name: Publish Coverage Report
        uses: codecov/codecov-action@v4
        with:
          files: ${{ inputs.tests-path }}/**/*.cobertura.xml
          fail_ci_if_error: false
          verbose: true

      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: '${{ inputs.tests-path }}/**/*.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'Html;MarkdownSummaryGithub'

      - name: Publish Markdown Summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coveragereport

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ${{ steps.pack.outputs.output-directory }}/*.nupkg

      - name: Deploy documentation to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: coveragereport